/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TrainingIndexImport } from './routes/training/index'
import { Route as TrainingUserProfileIndexImport } from './routes/training/user-profile/index'
import { Route as TrainingTutorIndexImport } from './routes/training/tutor/index'
import { Route as TrainingStudentIndexImport } from './routes/training/student/index'
import { Route as TrainingFaqIndexImport } from './routes/training/faq/index'
import { Route as TrainingConfigIndexImport } from './routes/training/config/index'
import { Route as TrainingAnalyticsIndexImport } from './routes/training/analytics/index'
import { Route as TrainingTutorLayoutImport } from './routes/training/tutor/_layout'
import { Route as TrainingStudentLayoutImport } from './routes/training/student/_layout'
import { Route as TrainingStudentLeaderboardIndexImport } from './routes/training/student/leaderboard/index'
import { Route as TrainingStudentCoursesIndexImport } from './routes/training/student/courses/index'
import { Route as TrainingStudentAllCoursesIndexImport } from './routes/training/student/all-courses/index'
import { Route as TrainingAnalyticsComponentsIndexImport } from './routes/training/analytics/components/index'
import { Route as TrainingStudentCourseCourseIdImport } from './routes/training/student/course/$course-id'
import { Route as TrainingAnalyticsComponentsTopicTextItemImport } from './routes/training/analytics/components/TopicTextItem'
import { Route as TrainingAnalyticsComponentsTopicProgressItemImport } from './routes/training/analytics/components/TopicProgressItem'
import { Route as TrainingAnalyticsComponentsStatCardImport } from './routes/training/analytics/components/StatCard'
import { Route as TrainingAnalyticsComponentsSectionCardImport } from './routes/training/analytics/components/SectionCard'
import { Route as TrainingAnalyticsComponentsCustomSelectImport } from './routes/training/analytics/components/CustomSelect'
import { Route as TrainingStudentCoursesTopicsIndexImport } from './routes/training/student/courses/topics/index'
import { Route as TrainingStudentCoursesTopicIdIndexImport } from './routes/training/student/courses/$topicId/index'
import { Route as TrainingStudentCoursesTopicIdPdfViewerImport } from './routes/training/student/courses/$topicId/pdf-viewer'
import { Route as TrainingTutorCourseIdTraineeTraineeIdIndexImport } from './routes/training/tutor/$courseId/trainee/$traineeId/index'
import { Route as TrainingStudentTopicsCourseIdTopicIdIndexImport } from './routes/training/student/topics/$courseId/$topicId/index'
import { Route as TrainingStudentCoursesTopicIdQuizIndexImport } from './routes/training/student/courses/$topicId/quiz/index'
import { Route as TrainingStudentAllCoursesCourseIdTopicsIndexImport } from './routes/training/student/all-courses/$courseId/topics/index'
import { Route as TrainingStudentAllCoursesCourseIdChatBotIndexImport } from './routes/training/student/all-courses/$courseId/chat-bot/index'
import { Route as TrainingStudentCoursesTopicIdQuizReviewIndexImport } from './routes/training/student/courses/$topicId/quiz/review/index'
import { Route as TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexImport } from './routes/training/student/all-courses/$courseId/topics/$quiz-set/index'

// Create Virtual Routes

const TrainingTutorImport = createFileRoute('/training/tutor')()
const TrainingStudentImport = createFileRoute('/training/student')()

// Create/Update Routes

const TrainingTutorRoute = TrainingTutorImport.update({
  id: '/training/tutor',
  path: '/training/tutor',
  getParentRoute: () => rootRoute,
} as any)

const TrainingStudentRoute = TrainingStudentImport.update({
  id: '/training/student',
  path: '/training/student',
  getParentRoute: () => rootRoute,
} as any)

const TrainingIndexRoute = TrainingIndexImport.update({
  id: '/training/',
  path: '/training/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingUserProfileIndexRoute = TrainingUserProfileIndexImport.update({
  id: '/training/user-profile/',
  path: '/training/user-profile/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingTutorIndexRoute = TrainingTutorIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TrainingTutorRoute,
} as any)

const TrainingStudentIndexRoute = TrainingStudentIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TrainingStudentRoute,
} as any)

const TrainingFaqIndexRoute = TrainingFaqIndexImport.update({
  id: '/training/faq/',
  path: '/training/faq/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingConfigIndexRoute = TrainingConfigIndexImport.update({
  id: '/training/config/',
  path: '/training/config/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingAnalyticsIndexRoute = TrainingAnalyticsIndexImport.update({
  id: '/training/analytics/',
  path: '/training/analytics/',
  getParentRoute: () => rootRoute,
} as any)

const TrainingTutorLayoutRoute = TrainingTutorLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => TrainingTutorRoute,
} as any)

const TrainingStudentLayoutRoute = TrainingStudentLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => TrainingStudentRoute,
} as any)

const TrainingStudentLeaderboardIndexRoute =
  TrainingStudentLeaderboardIndexImport.update({
    id: '/leaderboard/',
    path: '/leaderboard/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentCoursesIndexRoute =
  TrainingStudentCoursesIndexImport.update({
    id: '/courses/',
    path: '/courses/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentAllCoursesIndexRoute =
  TrainingStudentAllCoursesIndexImport.update({
    id: '/all-courses/',
    path: '/all-courses/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingAnalyticsComponentsIndexRoute =
  TrainingAnalyticsComponentsIndexImport.update({
    id: '/training/analytics/components/',
    path: '/training/analytics/components/',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingStudentCourseCourseIdRoute =
  TrainingStudentCourseCourseIdImport.update({
    id: '/course/$course-id',
    path: '/course/$course-id',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingAnalyticsComponentsTopicTextItemRoute =
  TrainingAnalyticsComponentsTopicTextItemImport.update({
    id: '/training/analytics/components/TopicTextItem',
    path: '/training/analytics/components/TopicTextItem',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingAnalyticsComponentsTopicProgressItemRoute =
  TrainingAnalyticsComponentsTopicProgressItemImport.update({
    id: '/training/analytics/components/TopicProgressItem',
    path: '/training/analytics/components/TopicProgressItem',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingAnalyticsComponentsStatCardRoute =
  TrainingAnalyticsComponentsStatCardImport.update({
    id: '/training/analytics/components/StatCard',
    path: '/training/analytics/components/StatCard',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingAnalyticsComponentsSectionCardRoute =
  TrainingAnalyticsComponentsSectionCardImport.update({
    id: '/training/analytics/components/SectionCard',
    path: '/training/analytics/components/SectionCard',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingAnalyticsComponentsCustomSelectRoute =
  TrainingAnalyticsComponentsCustomSelectImport.update({
    id: '/training/analytics/components/CustomSelect',
    path: '/training/analytics/components/CustomSelect',
    getParentRoute: () => rootRoute,
  } as any)

const TrainingStudentCoursesTopicsIndexRoute =
  TrainingStudentCoursesTopicsIndexImport.update({
    id: '/courses/topics/',
    path: '/courses/topics/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentCoursesTopicIdIndexRoute =
  TrainingStudentCoursesTopicIdIndexImport.update({
    id: '/courses/$topicId/',
    path: '/courses/$topicId/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentCoursesTopicIdPdfViewerRoute =
  TrainingStudentCoursesTopicIdPdfViewerImport.update({
    id: '/courses/$topicId/pdf-viewer',
    path: '/courses/$topicId/pdf-viewer',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingTutorCourseIdTraineeTraineeIdIndexRoute =
  TrainingTutorCourseIdTraineeTraineeIdIndexImport.update({
    id: '/$courseId/trainee/$traineeId/',
    path: '/$courseId/trainee/$traineeId/',
    getParentRoute: () => TrainingTutorRoute,
  } as any)

const TrainingStudentTopicsCourseIdTopicIdIndexRoute =
  TrainingStudentTopicsCourseIdTopicIdIndexImport.update({
    id: '/topics/$courseId/$topicId/',
    path: '/topics/$courseId/$topicId/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentCoursesTopicIdQuizIndexRoute =
  TrainingStudentCoursesTopicIdQuizIndexImport.update({
    id: '/courses/$topicId/quiz/',
    path: '/courses/$topicId/quiz/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentAllCoursesCourseIdTopicsIndexRoute =
  TrainingStudentAllCoursesCourseIdTopicsIndexImport.update({
    id: '/all-courses/$courseId/topics/',
    path: '/all-courses/$courseId/topics/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentAllCoursesCourseIdChatBotIndexRoute =
  TrainingStudentAllCoursesCourseIdChatBotIndexImport.update({
    id: '/all-courses/$courseId/chat-bot/',
    path: '/all-courses/$courseId/chat-bot/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentCoursesTopicIdQuizReviewIndexRoute =
  TrainingStudentCoursesTopicIdQuizReviewIndexImport.update({
    id: '/courses/$topicId/quiz/review/',
    path: '/courses/$topicId/quiz/review/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

const TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute =
  TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexImport.update({
    id: '/all-courses/$courseId/topics/$quiz-set/',
    path: '/all-courses/$courseId/topics/$quiz-set/',
    getParentRoute: () => TrainingStudentRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/training/': {
      id: '/training/'
      path: '/training'
      fullPath: '/training'
      preLoaderRoute: typeof TrainingIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/student': {
      id: '/training/student'
      path: '/training/student'
      fullPath: '/training/student'
      preLoaderRoute: typeof TrainingStudentImport
      parentRoute: typeof rootRoute
    }
    '/training/student/_layout': {
      id: '/training/student/_layout'
      path: '/training/student'
      fullPath: '/training/student'
      preLoaderRoute: typeof TrainingStudentLayoutImport
      parentRoute: typeof TrainingStudentRoute
    }
    '/training/tutor': {
      id: '/training/tutor'
      path: '/training/tutor'
      fullPath: '/training/tutor'
      preLoaderRoute: typeof TrainingTutorImport
      parentRoute: typeof rootRoute
    }
    '/training/tutor/_layout': {
      id: '/training/tutor/_layout'
      path: '/training/tutor'
      fullPath: '/training/tutor'
      preLoaderRoute: typeof TrainingTutorLayoutImport
      parentRoute: typeof TrainingTutorRoute
    }
    '/training/analytics/': {
      id: '/training/analytics/'
      path: '/training/analytics'
      fullPath: '/training/analytics'
      preLoaderRoute: typeof TrainingAnalyticsIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/config/': {
      id: '/training/config/'
      path: '/training/config'
      fullPath: '/training/config'
      preLoaderRoute: typeof TrainingConfigIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/faq/': {
      id: '/training/faq/'
      path: '/training/faq'
      fullPath: '/training/faq'
      preLoaderRoute: typeof TrainingFaqIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/student/': {
      id: '/training/student/'
      path: '/'
      fullPath: '/training/student/'
      preLoaderRoute: typeof TrainingStudentIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/tutor/': {
      id: '/training/tutor/'
      path: '/'
      fullPath: '/training/tutor/'
      preLoaderRoute: typeof TrainingTutorIndexImport
      parentRoute: typeof TrainingTutorImport
    }
    '/training/user-profile/': {
      id: '/training/user-profile/'
      path: '/training/user-profile'
      fullPath: '/training/user-profile'
      preLoaderRoute: typeof TrainingUserProfileIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/analytics/components/CustomSelect': {
      id: '/training/analytics/components/CustomSelect'
      path: '/training/analytics/components/CustomSelect'
      fullPath: '/training/analytics/components/CustomSelect'
      preLoaderRoute: typeof TrainingAnalyticsComponentsCustomSelectImport
      parentRoute: typeof rootRoute
    }
    '/training/analytics/components/SectionCard': {
      id: '/training/analytics/components/SectionCard'
      path: '/training/analytics/components/SectionCard'
      fullPath: '/training/analytics/components/SectionCard'
      preLoaderRoute: typeof TrainingAnalyticsComponentsSectionCardImport
      parentRoute: typeof rootRoute
    }
    '/training/analytics/components/StatCard': {
      id: '/training/analytics/components/StatCard'
      path: '/training/analytics/components/StatCard'
      fullPath: '/training/analytics/components/StatCard'
      preLoaderRoute: typeof TrainingAnalyticsComponentsStatCardImport
      parentRoute: typeof rootRoute
    }
    '/training/analytics/components/TopicProgressItem': {
      id: '/training/analytics/components/TopicProgressItem'
      path: '/training/analytics/components/TopicProgressItem'
      fullPath: '/training/analytics/components/TopicProgressItem'
      preLoaderRoute: typeof TrainingAnalyticsComponentsTopicProgressItemImport
      parentRoute: typeof rootRoute
    }
    '/training/analytics/components/TopicTextItem': {
      id: '/training/analytics/components/TopicTextItem'
      path: '/training/analytics/components/TopicTextItem'
      fullPath: '/training/analytics/components/TopicTextItem'
      preLoaderRoute: typeof TrainingAnalyticsComponentsTopicTextItemImport
      parentRoute: typeof rootRoute
    }
    '/training/student/course/$course-id': {
      id: '/training/student/course/$course-id'
      path: '/course/$course-id'
      fullPath: '/training/student/course/$course-id'
      preLoaderRoute: typeof TrainingStudentCourseCourseIdImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/analytics/components/': {
      id: '/training/analytics/components/'
      path: '/training/analytics/components'
      fullPath: '/training/analytics/components'
      preLoaderRoute: typeof TrainingAnalyticsComponentsIndexImport
      parentRoute: typeof rootRoute
    }
    '/training/student/all-courses/': {
      id: '/training/student/all-courses/'
      path: '/all-courses'
      fullPath: '/training/student/all-courses'
      preLoaderRoute: typeof TrainingStudentAllCoursesIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/': {
      id: '/training/student/courses/'
      path: '/courses'
      fullPath: '/training/student/courses'
      preLoaderRoute: typeof TrainingStudentCoursesIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/leaderboard/': {
      id: '/training/student/leaderboard/'
      path: '/leaderboard'
      fullPath: '/training/student/leaderboard'
      preLoaderRoute: typeof TrainingStudentLeaderboardIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/$topicId/pdf-viewer': {
      id: '/training/student/courses/$topicId/pdf-viewer'
      path: '/courses/$topicId/pdf-viewer'
      fullPath: '/training/student/courses/$topicId/pdf-viewer'
      preLoaderRoute: typeof TrainingStudentCoursesTopicIdPdfViewerImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/$topicId/': {
      id: '/training/student/courses/$topicId/'
      path: '/courses/$topicId'
      fullPath: '/training/student/courses/$topicId'
      preLoaderRoute: typeof TrainingStudentCoursesTopicIdIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/topics/': {
      id: '/training/student/courses/topics/'
      path: '/courses/topics'
      fullPath: '/training/student/courses/topics'
      preLoaderRoute: typeof TrainingStudentCoursesTopicsIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/all-courses/$courseId/chat-bot/': {
      id: '/training/student/all-courses/$courseId/chat-bot/'
      path: '/all-courses/$courseId/chat-bot'
      fullPath: '/training/student/all-courses/$courseId/chat-bot'
      preLoaderRoute: typeof TrainingStudentAllCoursesCourseIdChatBotIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/all-courses/$courseId/topics/': {
      id: '/training/student/all-courses/$courseId/topics/'
      path: '/all-courses/$courseId/topics'
      fullPath: '/training/student/all-courses/$courseId/topics'
      preLoaderRoute: typeof TrainingStudentAllCoursesCourseIdTopicsIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/$topicId/quiz/': {
      id: '/training/student/courses/$topicId/quiz/'
      path: '/courses/$topicId/quiz'
      fullPath: '/training/student/courses/$topicId/quiz'
      preLoaderRoute: typeof TrainingStudentCoursesTopicIdQuizIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/topics/$courseId/$topicId/': {
      id: '/training/student/topics/$courseId/$topicId/'
      path: '/topics/$courseId/$topicId'
      fullPath: '/training/student/topics/$courseId/$topicId'
      preLoaderRoute: typeof TrainingStudentTopicsCourseIdTopicIdIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/tutor/$courseId/trainee/$traineeId/': {
      id: '/training/tutor/$courseId/trainee/$traineeId/'
      path: '/$courseId/trainee/$traineeId'
      fullPath: '/training/tutor/$courseId/trainee/$traineeId'
      preLoaderRoute: typeof TrainingTutorCourseIdTraineeTraineeIdIndexImport
      parentRoute: typeof TrainingTutorImport
    }
    '/training/student/all-courses/$courseId/topics/$quiz-set/': {
      id: '/training/student/all-courses/$courseId/topics/$quiz-set/'
      path: '/all-courses/$courseId/topics/$quiz-set'
      fullPath: '/training/student/all-courses/$courseId/topics/$quiz-set'
      preLoaderRoute: typeof TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexImport
      parentRoute: typeof TrainingStudentImport
    }
    '/training/student/courses/$topicId/quiz/review/': {
      id: '/training/student/courses/$topicId/quiz/review/'
      path: '/courses/$topicId/quiz/review'
      fullPath: '/training/student/courses/$topicId/quiz/review'
      preLoaderRoute: typeof TrainingStudentCoursesTopicIdQuizReviewIndexImport
      parentRoute: typeof TrainingStudentImport
    }
  }
}

// Create and export the route tree

interface TrainingStudentRouteChildren {
  TrainingStudentLayoutRoute: typeof TrainingStudentLayoutRoute
  TrainingStudentIndexRoute: typeof TrainingStudentIndexRoute
  TrainingStudentCourseCourseIdRoute: typeof TrainingStudentCourseCourseIdRoute
  TrainingStudentAllCoursesIndexRoute: typeof TrainingStudentAllCoursesIndexRoute
  TrainingStudentCoursesIndexRoute: typeof TrainingStudentCoursesIndexRoute
  TrainingStudentLeaderboardIndexRoute: typeof TrainingStudentLeaderboardIndexRoute
  TrainingStudentCoursesTopicIdPdfViewerRoute: typeof TrainingStudentCoursesTopicIdPdfViewerRoute
  TrainingStudentCoursesTopicIdIndexRoute: typeof TrainingStudentCoursesTopicIdIndexRoute
  TrainingStudentCoursesTopicsIndexRoute: typeof TrainingStudentCoursesTopicsIndexRoute
  TrainingStudentAllCoursesCourseIdChatBotIndexRoute: typeof TrainingStudentAllCoursesCourseIdChatBotIndexRoute
  TrainingStudentAllCoursesCourseIdTopicsIndexRoute: typeof TrainingStudentAllCoursesCourseIdTopicsIndexRoute
  TrainingStudentCoursesTopicIdQuizIndexRoute: typeof TrainingStudentCoursesTopicIdQuizIndexRoute
  TrainingStudentTopicsCourseIdTopicIdIndexRoute: typeof TrainingStudentTopicsCourseIdTopicIdIndexRoute
  TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute: typeof TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute
  TrainingStudentCoursesTopicIdQuizReviewIndexRoute: typeof TrainingStudentCoursesTopicIdQuizReviewIndexRoute
}

const TrainingStudentRouteChildren: TrainingStudentRouteChildren = {
  TrainingStudentLayoutRoute: TrainingStudentLayoutRoute,
  TrainingStudentIndexRoute: TrainingStudentIndexRoute,
  TrainingStudentCourseCourseIdRoute: TrainingStudentCourseCourseIdRoute,
  TrainingStudentAllCoursesIndexRoute: TrainingStudentAllCoursesIndexRoute,
  TrainingStudentCoursesIndexRoute: TrainingStudentCoursesIndexRoute,
  TrainingStudentLeaderboardIndexRoute: TrainingStudentLeaderboardIndexRoute,
  TrainingStudentCoursesTopicIdPdfViewerRoute:
    TrainingStudentCoursesTopicIdPdfViewerRoute,
  TrainingStudentCoursesTopicIdIndexRoute:
    TrainingStudentCoursesTopicIdIndexRoute,
  TrainingStudentCoursesTopicsIndexRoute:
    TrainingStudentCoursesTopicsIndexRoute,
  TrainingStudentAllCoursesCourseIdChatBotIndexRoute:
    TrainingStudentAllCoursesCourseIdChatBotIndexRoute,
  TrainingStudentAllCoursesCourseIdTopicsIndexRoute:
    TrainingStudentAllCoursesCourseIdTopicsIndexRoute,
  TrainingStudentCoursesTopicIdQuizIndexRoute:
    TrainingStudentCoursesTopicIdQuizIndexRoute,
  TrainingStudentTopicsCourseIdTopicIdIndexRoute:
    TrainingStudentTopicsCourseIdTopicIdIndexRoute,
  TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute:
    TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute,
  TrainingStudentCoursesTopicIdQuizReviewIndexRoute:
    TrainingStudentCoursesTopicIdQuizReviewIndexRoute,
}

const TrainingStudentRouteWithChildren = TrainingStudentRoute._addFileChildren(
  TrainingStudentRouteChildren,
)

interface TrainingTutorRouteChildren {
  TrainingTutorLayoutRoute: typeof TrainingTutorLayoutRoute
  TrainingTutorIndexRoute: typeof TrainingTutorIndexRoute
  TrainingTutorCourseIdTraineeTraineeIdIndexRoute: typeof TrainingTutorCourseIdTraineeTraineeIdIndexRoute
}

const TrainingTutorRouteChildren: TrainingTutorRouteChildren = {
  TrainingTutorLayoutRoute: TrainingTutorLayoutRoute,
  TrainingTutorIndexRoute: TrainingTutorIndexRoute,
  TrainingTutorCourseIdTraineeTraineeIdIndexRoute:
    TrainingTutorCourseIdTraineeTraineeIdIndexRoute,
}

const TrainingTutorRouteWithChildren = TrainingTutorRoute._addFileChildren(
  TrainingTutorRouteChildren,
)

export interface FileRoutesByFullPath {
  '/training': typeof TrainingIndexRoute
  '/training/student': typeof TrainingStudentLayoutRoute
  '/training/tutor': typeof TrainingTutorLayoutRoute
  '/training/analytics': typeof TrainingAnalyticsIndexRoute
  '/training/config': typeof TrainingConfigIndexRoute
  '/training/faq': typeof TrainingFaqIndexRoute
  '/training/student/': typeof TrainingStudentIndexRoute
  '/training/tutor/': typeof TrainingTutorIndexRoute
  '/training/user-profile': typeof TrainingUserProfileIndexRoute
  '/training/analytics/components/CustomSelect': typeof TrainingAnalyticsComponentsCustomSelectRoute
  '/training/analytics/components/SectionCard': typeof TrainingAnalyticsComponentsSectionCardRoute
  '/training/analytics/components/StatCard': typeof TrainingAnalyticsComponentsStatCardRoute
  '/training/analytics/components/TopicProgressItem': typeof TrainingAnalyticsComponentsTopicProgressItemRoute
  '/training/analytics/components/TopicTextItem': typeof TrainingAnalyticsComponentsTopicTextItemRoute
  '/training/student/course/$course-id': typeof TrainingStudentCourseCourseIdRoute
  '/training/analytics/components': typeof TrainingAnalyticsComponentsIndexRoute
  '/training/student/all-courses': typeof TrainingStudentAllCoursesIndexRoute
  '/training/student/courses': typeof TrainingStudentCoursesIndexRoute
  '/training/student/leaderboard': typeof TrainingStudentLeaderboardIndexRoute
  '/training/student/courses/$topicId/pdf-viewer': typeof TrainingStudentCoursesTopicIdPdfViewerRoute
  '/training/student/courses/$topicId': typeof TrainingStudentCoursesTopicIdIndexRoute
  '/training/student/courses/topics': typeof TrainingStudentCoursesTopicsIndexRoute
  '/training/student/all-courses/$courseId/chat-bot': typeof TrainingStudentAllCoursesCourseIdChatBotIndexRoute
  '/training/student/all-courses/$courseId/topics': typeof TrainingStudentAllCoursesCourseIdTopicsIndexRoute
  '/training/student/courses/$topicId/quiz': typeof TrainingStudentCoursesTopicIdQuizIndexRoute
  '/training/student/topics/$courseId/$topicId': typeof TrainingStudentTopicsCourseIdTopicIdIndexRoute
  '/training/tutor/$courseId/trainee/$traineeId': typeof TrainingTutorCourseIdTraineeTraineeIdIndexRoute
  '/training/student/all-courses/$courseId/topics/$quiz-set': typeof TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute
  '/training/student/courses/$topicId/quiz/review': typeof TrainingStudentCoursesTopicIdQuizReviewIndexRoute
}

export interface FileRoutesByTo {
  '/training': typeof TrainingIndexRoute
  '/training/student': typeof TrainingStudentIndexRoute
  '/training/tutor': typeof TrainingTutorIndexRoute
  '/training/analytics': typeof TrainingAnalyticsIndexRoute
  '/training/config': typeof TrainingConfigIndexRoute
  '/training/faq': typeof TrainingFaqIndexRoute
  '/training/user-profile': typeof TrainingUserProfileIndexRoute
  '/training/analytics/components/CustomSelect': typeof TrainingAnalyticsComponentsCustomSelectRoute
  '/training/analytics/components/SectionCard': typeof TrainingAnalyticsComponentsSectionCardRoute
  '/training/analytics/components/StatCard': typeof TrainingAnalyticsComponentsStatCardRoute
  '/training/analytics/components/TopicProgressItem': typeof TrainingAnalyticsComponentsTopicProgressItemRoute
  '/training/analytics/components/TopicTextItem': typeof TrainingAnalyticsComponentsTopicTextItemRoute
  '/training/student/course/$course-id': typeof TrainingStudentCourseCourseIdRoute
  '/training/analytics/components': typeof TrainingAnalyticsComponentsIndexRoute
  '/training/student/all-courses': typeof TrainingStudentAllCoursesIndexRoute
  '/training/student/courses': typeof TrainingStudentCoursesIndexRoute
  '/training/student/leaderboard': typeof TrainingStudentLeaderboardIndexRoute
  '/training/student/courses/$topicId/pdf-viewer': typeof TrainingStudentCoursesTopicIdPdfViewerRoute
  '/training/student/courses/$topicId': typeof TrainingStudentCoursesTopicIdIndexRoute
  '/training/student/courses/topics': typeof TrainingStudentCoursesTopicsIndexRoute
  '/training/student/all-courses/$courseId/chat-bot': typeof TrainingStudentAllCoursesCourseIdChatBotIndexRoute
  '/training/student/all-courses/$courseId/topics': typeof TrainingStudentAllCoursesCourseIdTopicsIndexRoute
  '/training/student/courses/$topicId/quiz': typeof TrainingStudentCoursesTopicIdQuizIndexRoute
  '/training/student/topics/$courseId/$topicId': typeof TrainingStudentTopicsCourseIdTopicIdIndexRoute
  '/training/tutor/$courseId/trainee/$traineeId': typeof TrainingTutorCourseIdTraineeTraineeIdIndexRoute
  '/training/student/all-courses/$courseId/topics/$quiz-set': typeof TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute
  '/training/student/courses/$topicId/quiz/review': typeof TrainingStudentCoursesTopicIdQuizReviewIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/training/': typeof TrainingIndexRoute
  '/training/student': typeof TrainingStudentRouteWithChildren
  '/training/student/_layout': typeof TrainingStudentLayoutRoute
  '/training/tutor': typeof TrainingTutorRouteWithChildren
  '/training/tutor/_layout': typeof TrainingTutorLayoutRoute
  '/training/analytics/': typeof TrainingAnalyticsIndexRoute
  '/training/config/': typeof TrainingConfigIndexRoute
  '/training/faq/': typeof TrainingFaqIndexRoute
  '/training/student/': typeof TrainingStudentIndexRoute
  '/training/tutor/': typeof TrainingTutorIndexRoute
  '/training/user-profile/': typeof TrainingUserProfileIndexRoute
  '/training/analytics/components/CustomSelect': typeof TrainingAnalyticsComponentsCustomSelectRoute
  '/training/analytics/components/SectionCard': typeof TrainingAnalyticsComponentsSectionCardRoute
  '/training/analytics/components/StatCard': typeof TrainingAnalyticsComponentsStatCardRoute
  '/training/analytics/components/TopicProgressItem': typeof TrainingAnalyticsComponentsTopicProgressItemRoute
  '/training/analytics/components/TopicTextItem': typeof TrainingAnalyticsComponentsTopicTextItemRoute
  '/training/student/course/$course-id': typeof TrainingStudentCourseCourseIdRoute
  '/training/analytics/components/': typeof TrainingAnalyticsComponentsIndexRoute
  '/training/student/all-courses/': typeof TrainingStudentAllCoursesIndexRoute
  '/training/student/courses/': typeof TrainingStudentCoursesIndexRoute
  '/training/student/leaderboard/': typeof TrainingStudentLeaderboardIndexRoute
  '/training/student/courses/$topicId/pdf-viewer': typeof TrainingStudentCoursesTopicIdPdfViewerRoute
  '/training/student/courses/$topicId/': typeof TrainingStudentCoursesTopicIdIndexRoute
  '/training/student/courses/topics/': typeof TrainingStudentCoursesTopicsIndexRoute
  '/training/student/all-courses/$courseId/chat-bot/': typeof TrainingStudentAllCoursesCourseIdChatBotIndexRoute
  '/training/student/all-courses/$courseId/topics/': typeof TrainingStudentAllCoursesCourseIdTopicsIndexRoute
  '/training/student/courses/$topicId/quiz/': typeof TrainingStudentCoursesTopicIdQuizIndexRoute
  '/training/student/topics/$courseId/$topicId/': typeof TrainingStudentTopicsCourseIdTopicIdIndexRoute
  '/training/tutor/$courseId/trainee/$traineeId/': typeof TrainingTutorCourseIdTraineeTraineeIdIndexRoute
  '/training/student/all-courses/$courseId/topics/$quiz-set/': typeof TrainingStudentAllCoursesCourseIdTopicsQuizSetIndexRoute
  '/training/student/courses/$topicId/quiz/review/': typeof TrainingStudentCoursesTopicIdQuizReviewIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/training'
    | '/training/student'
    | '/training/tutor'
    | '/training/analytics'
    | '/training/config'
    | '/training/faq'
    | '/training/student/'
    | '/training/tutor/'
    | '/training/user-profile'
    | '/training/analytics/components/CustomSelect'
    | '/training/analytics/components/SectionCard'
    | '/training/analytics/components/StatCard'
    | '/training/analytics/components/TopicProgressItem'
    | '/training/analytics/components/TopicTextItem'
    | '/training/student/course/$course-id'
    | '/training/analytics/components'
    | '/training/student/all-courses'
    | '/training/student/courses'
    | '/training/student/leaderboard'
    | '/training/student/courses/$topicId/pdf-viewer'
    | '/training/student/courses/$topicId'
    | '/training/student/courses/topics'
    | '/training/student/all-courses/$courseId/chat-bot'
    | '/training/student/all-courses/$courseId/topics'
    | '/training/student/courses/$topicId/quiz'
    | '/training/student/topics/$courseId/$topicId'
    | '/training/tutor/$courseId/trainee/$traineeId'
    | '/training/student/all-courses/$courseId/topics/$quiz-set'
    | '/training/student/courses/$topicId/quiz/review'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/training'
    | '/training/student'
    | '/training/tutor'
    | '/training/analytics'
    | '/training/config'
    | '/training/faq'
    | '/training/user-profile'
    | '/training/analytics/components/CustomSelect'
    | '/training/analytics/components/SectionCard'
    | '/training/analytics/components/StatCard'
    | '/training/analytics/components/TopicProgressItem'
    | '/training/analytics/components/TopicTextItem'
    | '/training/student/course/$course-id'
    | '/training/analytics/components'
    | '/training/student/all-courses'
    | '/training/student/courses'
    | '/training/student/leaderboard'
    | '/training/student/courses/$topicId/pdf-viewer'
    | '/training/student/courses/$topicId'
    | '/training/student/courses/topics'
    | '/training/student/all-courses/$courseId/chat-bot'
    | '/training/student/all-courses/$courseId/topics'
    | '/training/student/courses/$topicId/quiz'
    | '/training/student/topics/$courseId/$topicId'
    | '/training/tutor/$courseId/trainee/$traineeId'
    | '/training/student/all-courses/$courseId/topics/$quiz-set'
    | '/training/student/courses/$topicId/quiz/review'
  id:
    | '__root__'
    | '/training/'
    | '/training/student'
    | '/training/student/_layout'
    | '/training/tutor'
    | '/training/tutor/_layout'
    | '/training/analytics/'
    | '/training/config/'
    | '/training/faq/'
    | '/training/student/'
    | '/training/tutor/'
    | '/training/user-profile/'
    | '/training/analytics/components/CustomSelect'
    | '/training/analytics/components/SectionCard'
    | '/training/analytics/components/StatCard'
    | '/training/analytics/components/TopicProgressItem'
    | '/training/analytics/components/TopicTextItem'
    | '/training/student/course/$course-id'
    | '/training/analytics/components/'
    | '/training/student/all-courses/'
    | '/training/student/courses/'
    | '/training/student/leaderboard/'
    | '/training/student/courses/$topicId/pdf-viewer'
    | '/training/student/courses/$topicId/'
    | '/training/student/courses/topics/'
    | '/training/student/all-courses/$courseId/chat-bot/'
    | '/training/student/all-courses/$courseId/topics/'
    | '/training/student/courses/$topicId/quiz/'
    | '/training/student/topics/$courseId/$topicId/'
    | '/training/tutor/$courseId/trainee/$traineeId/'
    | '/training/student/all-courses/$courseId/topics/$quiz-set/'
    | '/training/student/courses/$topicId/quiz/review/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  TrainingIndexRoute: typeof TrainingIndexRoute
  TrainingStudentRoute: typeof TrainingStudentRouteWithChildren
  TrainingTutorRoute: typeof TrainingTutorRouteWithChildren
  TrainingAnalyticsIndexRoute: typeof TrainingAnalyticsIndexRoute
  TrainingConfigIndexRoute: typeof TrainingConfigIndexRoute
  TrainingFaqIndexRoute: typeof TrainingFaqIndexRoute
  TrainingUserProfileIndexRoute: typeof TrainingUserProfileIndexRoute
  TrainingAnalyticsComponentsCustomSelectRoute: typeof TrainingAnalyticsComponentsCustomSelectRoute
  TrainingAnalyticsComponentsSectionCardRoute: typeof TrainingAnalyticsComponentsSectionCardRoute
  TrainingAnalyticsComponentsStatCardRoute: typeof TrainingAnalyticsComponentsStatCardRoute
  TrainingAnalyticsComponentsTopicProgressItemRoute: typeof TrainingAnalyticsComponentsTopicProgressItemRoute
  TrainingAnalyticsComponentsTopicTextItemRoute: typeof TrainingAnalyticsComponentsTopicTextItemRoute
  TrainingAnalyticsComponentsIndexRoute: typeof TrainingAnalyticsComponentsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  TrainingIndexRoute: TrainingIndexRoute,
  TrainingStudentRoute: TrainingStudentRouteWithChildren,
  TrainingTutorRoute: TrainingTutorRouteWithChildren,
  TrainingAnalyticsIndexRoute: TrainingAnalyticsIndexRoute,
  TrainingConfigIndexRoute: TrainingConfigIndexRoute,
  TrainingFaqIndexRoute: TrainingFaqIndexRoute,
  TrainingUserProfileIndexRoute: TrainingUserProfileIndexRoute,
  TrainingAnalyticsComponentsCustomSelectRoute:
    TrainingAnalyticsComponentsCustomSelectRoute,
  TrainingAnalyticsComponentsSectionCardRoute:
    TrainingAnalyticsComponentsSectionCardRoute,
  TrainingAnalyticsComponentsStatCardRoute:
    TrainingAnalyticsComponentsStatCardRoute,
  TrainingAnalyticsComponentsTopicProgressItemRoute:
    TrainingAnalyticsComponentsTopicProgressItemRoute,
  TrainingAnalyticsComponentsTopicTextItemRoute:
    TrainingAnalyticsComponentsTopicTextItemRoute,
  TrainingAnalyticsComponentsIndexRoute: TrainingAnalyticsComponentsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/training/",
        "/training/student",
        "/training/tutor",
        "/training/analytics/",
        "/training/config/",
        "/training/faq/",
        "/training/user-profile/",
        "/training/analytics/components/CustomSelect",
        "/training/analytics/components/SectionCard",
        "/training/analytics/components/StatCard",
        "/training/analytics/components/TopicProgressItem",
        "/training/analytics/components/TopicTextItem",
        "/training/analytics/components/"
      ]
    },
    "/training/": {
      "filePath": "training/index.tsx"
    },
    "/training/student": {
      "filePath": "training/student",
      "children": [
        "/training/student/_layout",
        "/training/student/",
        "/training/student/course/$course-id",
        "/training/student/all-courses/",
        "/training/student/courses/",
        "/training/student/leaderboard/",
        "/training/student/courses/$topicId/pdf-viewer",
        "/training/student/courses/$topicId/",
        "/training/student/courses/topics/",
        "/training/student/all-courses/$courseId/chat-bot/",
        "/training/student/all-courses/$courseId/topics/",
        "/training/student/courses/$topicId/quiz/",
        "/training/student/topics/$courseId/$topicId/",
        "/training/student/all-courses/$courseId/topics/$quiz-set/",
        "/training/student/courses/$topicId/quiz/review/"
      ]
    },
    "/training/student/_layout": {
      "filePath": "training/student/_layout.tsx",
      "parent": "/training/student"
    },
    "/training/tutor": {
      "filePath": "training/tutor",
      "children": [
        "/training/tutor/_layout",
        "/training/tutor/",
        "/training/tutor/$courseId/trainee/$traineeId/"
      ]
    },
    "/training/tutor/_layout": {
      "filePath": "training/tutor/_layout.tsx",
      "parent": "/training/tutor"
    },
    "/training/analytics/": {
      "filePath": "training/analytics/index.tsx"
    },
    "/training/config/": {
      "filePath": "training/config/index.tsx"
    },
    "/training/faq/": {
      "filePath": "training/faq/index.tsx"
    },
    "/training/student/": {
      "filePath": "training/student/index.tsx",
      "parent": "/training/student"
    },
    "/training/tutor/": {
      "filePath": "training/tutor/index.tsx",
      "parent": "/training/tutor"
    },
    "/training/user-profile/": {
      "filePath": "training/user-profile/index.tsx"
    },
    "/training/analytics/components/CustomSelect": {
      "filePath": "training/analytics/components/CustomSelect.tsx"
    },
    "/training/analytics/components/SectionCard": {
      "filePath": "training/analytics/components/SectionCard.tsx"
    },
    "/training/analytics/components/StatCard": {
      "filePath": "training/analytics/components/StatCard.tsx"
    },
    "/training/analytics/components/TopicProgressItem": {
      "filePath": "training/analytics/components/TopicProgressItem.tsx"
    },
    "/training/analytics/components/TopicTextItem": {
      "filePath": "training/analytics/components/TopicTextItem.tsx"
    },
    "/training/student/course/$course-id": {
      "filePath": "training/student/course/$course-id.tsx",
      "parent": "/training/student"
    },
    "/training/analytics/components/": {
      "filePath": "training/analytics/components/index.ts"
    },
    "/training/student/all-courses/": {
      "filePath": "training/student/all-courses/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/": {
      "filePath": "training/student/courses/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/leaderboard/": {
      "filePath": "training/student/leaderboard/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/$topicId/pdf-viewer": {
      "filePath": "training/student/courses/$topicId/pdf-viewer.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/$topicId/": {
      "filePath": "training/student/courses/$topicId/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/topics/": {
      "filePath": "training/student/courses/topics/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/all-courses/$courseId/chat-bot/": {
      "filePath": "training/student/all-courses/$courseId/chat-bot/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/all-courses/$courseId/topics/": {
      "filePath": "training/student/all-courses/$courseId/topics/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/$topicId/quiz/": {
      "filePath": "training/student/courses/$topicId/quiz/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/topics/$courseId/$topicId/": {
      "filePath": "training/student/topics/$courseId/$topicId/index.tsx",
      "parent": "/training/student"
    },
    "/training/tutor/$courseId/trainee/$traineeId/": {
      "filePath": "training/tutor/$courseId/trainee/$traineeId/index.tsx",
      "parent": "/training/tutor"
    },
    "/training/student/all-courses/$courseId/topics/$quiz-set/": {
      "filePath": "training/student/all-courses/$courseId/topics/$quiz-set/index.tsx",
      "parent": "/training/student"
    },
    "/training/student/courses/$topicId/quiz/review/": {
      "filePath": "training/student/courses/$topicId/quiz/review/index.tsx",
      "parent": "/training/student"
    }
  }
}
ROUTE_MANIFEST_END */
